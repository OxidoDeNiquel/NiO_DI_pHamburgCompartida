<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_atras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        aj4AAAAASUVORK5CYII=
</value>
  </data>
</root>